AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  ExecuteStateMachineRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "AllowCWEServiceToAssumeRole"
            Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Principal:
              Service:
                - "events.amazonaws.com"
      Path: "/"
      Policies:
        -
          PolicyName: "ExecuteStateMachine"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "states:StartExecution"
                Resource: "*"

  SageMakerStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString: !Sub |-
        {
          "StartAt": "cleaning",
          "States": {
            "cleaning": {
              "Type": "Task",
              "Resource": "${cleaningFunction.Arn}",
              "ResultPath": "$",
              "Next": "train_test"
            },
            "train_test": {
              "Type": "Task",
              "Resource": "${traintestFunction.Arn}",
              "ResultPath": "$",
              "Next": "training"
              },
            "training": {
              "Type": "Task",
              "Resource": "${trainingFunction.Arn}",
              "ResultPath": "$",
              "Next": "lam"
            },
            "lam": {
              "Type": "Task",
              "Resource": "${predictionFunction.Arn}",
              "ResultPath": "$",
              "End": true
            }
          }
        }
      RoleArn: !GetAtt StepFunctionExecutionRole.Arn

  StepFunctionExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: !Sub states.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"
  #S3Bucket:
   # Type: "AWS::S3::Bucket"
    #Properties: 
     # BucketName: !Ref BucketName
  cleaningFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: cleaning.lambda_handler
      Runtime: python3.6
      CodeUri: s3://aman19/cleaning.py
      Description: 'Cleaning'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action: 
                - "s3:GetObject"
                - "s3:PutObject"
              Resource: "*"
  traintestFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: train_test.lambda_handler
      Runtime: python3.6
      CodeUri: s3://aman19/train_test.py
      Description: 'traintest divide'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "s3:PutObject"
                - "s3:GetObject"
              Resource: "*"
  trainingFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: training.lambda_handler
      Runtime: python3.6
      CodeUri: s3://aman19/training.py
      Description: ' training model to invokable endpoint'
      Timeout: 10
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "sagemaker:training"
              Resource: "*"
  predictionFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: prediction.lambda_handler
      Runtime: python3.6
      CodeUri: s3://aman19/prediction.py
      Description: 'prediction'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "sagemaker:predictor"
                - "sagemaker:getpredictionresult"
              Resource: "*"
Outputs:
  S3BucketName:
    Description: S3 bucket that will hold training data and model artifacts
    Value: aman19